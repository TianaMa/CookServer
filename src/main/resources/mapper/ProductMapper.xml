<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.cook.modules.product.mapper.ProductMapper">


  <insert id="insertProduct" parameterType="com.demo.cook.modules.product.model.Product">
    insert into t_product (productId, issuer, title, content, images, tagId, createTime)
    values (#{productId,jdbcType=VARCHAR}, #{issuer,jdbcType=VARCHAR},
    #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
    #{images,jdbcType=VARCHAR}, #{tagId,jdbcType=VARCHAR},
    SYSDATE() )

  </insert>

  <select id="queryMyPublishProduct" parameterType="java.lang.String" resultType="com.demo.cook.modules.product.model.ProductDetails" >

    select
    P.productId,  P.title, P.content, P.images, P.tagId,PT.tagName, P.createTime,P.issuer,
    U.nickName , U.headImg,
    CD.count 'countCollect',
    PD.count 'countPraise',
    CM.count 'countComment',
    ICD.count 'collected',
    IPD.count 'praised '
    from t_product P
    left join t_product_tag PT ON P.tagId = PT.tagId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_collect group by targetId )CD on P.productId= CD.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_praise group by targetId )PD on P.productId= PD.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_comment group by targetId )CM on P.productId= CM.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_collect where username = #{username,jdbcType=VARCHAR} group by targetId  )ICD on P.productId= ICD.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_praise where username = #{username,jdbcType=VARCHAR} group by targetId  )IPD on P.productId= IPD.targetId
    LEFT JOIN t_user U ON P.issuer = U.username
    where P.issuer = #{username,jdbcType=VARCHAR}

  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_product
    where productId = #{productId,jdbcType=VARCHAR}

  </delete>

  <update id="updateByProductIdSelective" parameterType="com.demo.cook.modules.product.model.Product">
    update t_product
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>

      <if test="images != null">
        content = #{images,jdbcType=VARCHAR},
      </if>
      <if test="tagId != null">
        content = #{tagId,jdbcType=VARCHAR},
      </if>

      createTime = SYSDATE(),
    </set>
    where productId = #{productId,jdbcType=VARCHAR}
  </update>



  <select id="queryProductList" parameterType="java.lang.String" resultType="com.demo.cook.modules.product.model.ProductDetails">
    select
    P.productId,  P.title, P.content, P.images, P.tagId,PT.tagName, P.createTime,P.issuer,
    U.nickName , U.headImg,
    CD.count 'countCollect',
    PD.count 'countPraise',
    CM.count 'countComment',
    if(ICD.count>0,TRUE,FALSE) 'collected',
    if(IPD.count>0,TRUE,FALSE) 'praised'
    from t_product P
    left join t_product_tag PT ON P.tagId = PT.tagId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_collect group by targetId )CD on P.productId= CD.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_praise group by targetId )PD on P.productId= PD.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_comment group by targetId )CM on P.productId= CM.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_collect where username = #{loginUserName,jdbcType=VARCHAR} group by targetId  )ICD on P.productId= ICD.targetId
    LEFT JOIN (select targetId 'targetId'  ,count(1) 'count' from t_user_praise where username = #{loginUserName,jdbcType=VARCHAR} group by targetId  )IPD on P.productId= IPD.targetId
    LEFT JOIN t_user U ON P.issuer = U.username
    <choose>
      <when test="order !=null and order == 'collect'">
        order by CD.count
      </when>
      <when test="order !=null and order == 'praise'">
        order by PD.count
      </when>
      <otherwise>
        order by P.createTime desc
      </otherwise>
    </choose>


  </select>

</mapper>